import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as o,b as n,d as t,e as l,w as a,r as s,o as p}from"./app-CZb3CGlS.js";const c={};function h(u,e){const i=s("RouteLink");return p(),r("div",null,[e[26]||(e[26]=o('<h1 id="教程-vhc-1-载具" tabindex="-1"><a class="header-anchor" href="#教程-vhc-1-载具"><span>教程 vhc.1 载具</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>在此文档中，我们将为您呈现制作一个载具的大致过程，使用原版载具作为示例</p><h2 id="_0-0-构思" tabindex="-1"><a class="header-anchor" href="#_0-0-构思"><span>0.0 构思</span></a></h2>',4)),n("p",null,[e[1]||(e[1]=t("同样地，像",-1)),l(i,{to:"/cn/Tutorials/wpn.1.html"},{default:a(()=>[...e[0]||(e[0]=[t("wpn.1",-1)])]),_:1}),e[2]||(e[2]=t("一样",-1))]),e[27]||(e[27]=n("p",null,"你要做的东西对应你所需要使用的Unity组件：",-1)),n("table",null,[e[15]||(e[15]=n("thead",null,[n("tr",null,[n("th",null,"载具类型"),n("th",null,"对应组件")])],-1)),n("tbody",null,[n("tr",null,[e[4]||(e[4]=n("td",null,"飞机",-1)),n("td",null,[l(i,{to:"/cn/Components/Airplane.html"},{default:a(()=>[...e[3]||(e[3]=[t("Airplane",-1)])]),_:1})])]),n("tr",null,[e[6]||(e[6]=n("td",null,"简单载具、固定载具",-1)),n("td",null,[l(i,{to:"/cn/Components/Vehicle.html"},{default:a(()=>[...e[5]||(e[5]=[t("Vehicle",-1)])]),_:1})])]),n("tr",null,[e[8]||(e[8]=n("td",null,"直升机",-1)),n("td",null,[l(i,{to:"/cn/Components/Helicopter.html"},{default:a(()=>[...e[7]||(e[7]=[t("Helicopter",-1)])]),_:1})])]),n("tr",null,[e[10]||(e[10]=n("td",null,"船只",-1)),n("td",null,[l(i,{to:"/cn/Components/Boat.html"},{default:a(()=>[...e[9]||(e[9]=[t("Boat",-1)])]),_:1})])]),n("tr",null,[e[12]||(e[12]=n("td",null,"碰碰车、车辆（带物理效果）",-1)),n("td",null,[l(i,{to:"/cn/Components/ArcadeCar.html"},{default:a(()=>[...e[11]||(e[11]=[t("ArcadeCar",-1)])]),_:1})])]),n("tr",null,[e[14]||(e[14]=n("td",null,[n("a",{href:"https://metalgear.fandom.com/wiki/Metal_Gear_REX",target:"_blank",rel:"noopener noreferrer"},"MG Rex"),t("（自定义动画）")],-1)),n("td",null,[l(i,{to:"/cn/Components/AnimationDrivenVehicle.html"},{default:a(()=>[...e[13]||(e[13]=[t("AnimationDrivenVehicle",-1)])]),_:1})])])])]),e[28]||(e[28]=o(`<p>上述的每一种载具都需要以下流程：</p><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" data-title="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">flowchart TD</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A[制作载具模型并创建材质]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A --&gt; B[&quot;\`制作动画（仅AnimationDrivenVehicle）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    制作载具图标</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    制作音效\`&quot;]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    B --&gt; C[&quot;Unity内配置组件&quot;]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    C --&gt; D[导出与发布]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是的，又要出发了！</p><h2 id="_1-0-确定所需资源" tabindex="-1"><a class="header-anchor" href="#_1-0-确定所需资源"><span>1.0 确定所需资源</span></a></h2><p>类似的，一个载具同样包含模型、音效、以及<a href="https://docs.unity.cn/cn/2020.3/Manual/ParticleSystems.html" target="_blank" rel="noopener noreferrer">粒子效果</a></p><p>上述三项资源需要您自行上网寻找或按要仿制的游戏武器自行寻找对应原版游戏美术资源、或自制</p><h2 id="_1-1-调整模型" tabindex="-1"><a class="header-anchor" href="#_1-1-调整模型"><span>1.1 调整模型</span></a></h2><p>模型这步真的没什么好说的，因载具而异</p><p>如果只是想练手，可以直接使用<code>RFTools\\Models\\Vehicles</code>内的模型</p><p>如果想自己制作而建模有些许不行，可以自行寻找模型或按要仿制的游戏武器自行寻找对应原版游戏美术资源</p><p>值得注意的是模型的几个问题：</p><p>确保模型的面数始终保持在一个相对较低的范围如8万,减少在Blender里三角面与四角面的混用,以防在规格化转换与材质映射中出现问题</p><p>确保模型的原点、法向正确</p><p>分好可动件与子级</p><p>总而言之、确保模型的规格化</p><details class="hint-container details"><summary>如果是AnimationDrivenVehicle...（制作动画）</summary><p>未实装、请先参考<a href="https://docs.unity.cn/cn/2020.3/Manual/AnimationSection.html" target="_blank" rel="noopener noreferrer">Unity文档</a>与社区<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=3000223001" target="_blank" rel="noopener noreferrer">Steam指南</a></p><p>已经够用</p></details><h2 id="_2-0-导入unity" tabindex="-1"><a class="header-anchor" href="#_2-0-导入unity"><span>2.0 导入Unity</span></a></h2><p>导出的过程敬请参考教程首页的<a href="/cn/Tutorials/#%E6%A8%A1%E5%9E%8B%E3%80%81%E5%8A%A8%E7%94%BB%E5%88%B6%E4%BD%9C" target="_blank" rel="noopener noreferrer">提示</a></p><p>打开Unity项目</p><p>如果您未创建Unity项目或导入<code>RFTools.unitypackage</code>，请自行导入，此处不再赘述</p><p>然后新建一个场景，乌鸦官方没有提供一个类似<code>Weapon Lab.unity</code>的场景用于测试载具</p><p>我们将在这个场景继续我们的全部工作</p><p>将载具模型添加入场景</p><h2 id="_2-1-各个载具组成-简单换皮向" tabindex="-1"><a class="header-anchor" href="#_2-1-各个载具组成-简单换皮向"><span>2.1 各个载具组成（简单换皮向）</span></a></h2><p>出于快速入门与简单易行的原因，我们将向你介绍一种简单易行的方法来快速制作载具</p><p>首先按照要制作的载具类型，复制粘贴一个原版对应载具的Prefab，这就是我们的工作prefab</p><p>在文档完成之前，参考<a href="https://www.bilibili.com/video/BV1aF411N7mJ" target="_blank" rel="noopener noreferrer">BiliBili</a></p><p>各个原版载具包含什么？</p><h2 id="_2-2-各个载具组成-复杂向" tabindex="-1"><a class="header-anchor" href="#_2-2-各个载具组成-复杂向"><span>2.2 各个载具组成（复杂向）</span></a></h2><p>以下为各个类型原版载具的组成（面向差异，与一些比较隐蔽的步骤）</p><p>下面的一些配置项跟着的值为原版各载具的值</p><h3 id="_2-1-1-jeep与武装jeep" tabindex="-1"><a class="header-anchor" href="#_2-1-1-jeep与武装jeep"><span>2.1.1 Jeep与武装Jeep</span></a></h3>`,32)),n("p",null,[e[18]||(e[18]=t("原版中Jeep使用的是",-1)),l(i,{to:"/cn/Components/ArcadeCar.html"},{default:a(()=>[...e[16]||(e[16]=[t("ArcadeCar",-1)])]),_:1}),e[19]||(e[19]=t(",你也可以直接使用",-1)),l(i,{to:"/cn/Components/Vehicle.html"},{default:a(()=>[...e[17]||(e[17]=[t("Vehicle",-1)])]),_:1}),e[20]||(e[20]=t(",但可能会缺失一些物理效果",-1))]),e[29]||(e[29]=o(`<p>在这个模型中，模型包含车体、座位、方向盘、车轮，要进行的操作包括：</p><div class="language-md line-numbers-mode" data-highlighter="shiki" data-ext="md" data-title="md" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 添加载具组件、Rigidbody与AudioSource组件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 配置，添加BoxCollider、方向盘动画、粒子效果、音效、车轮、座位及相机</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 配置载具组件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建一个空物体（这将作为载具物体。不推荐直接将模型拖入场景，模型物体作为载具物体，模型的中心点可能不正确），将模型（<code>RFTools/Models/Vehicles/jeep.blend</code>）拖入空物体内，作为其子物体添加进去</p>`,3)),n("p",null,[e[22]||(e[22]=t("在载具物体顶层添加",-1)),l(i,{to:"/cn/Components/ArcadeCar.html"},{default:a(()=>[...e[21]||(e[21]=[t("ArcadeCar",-1)])]),_:1}),e[23]||(e[23]=t("组件",-1))]),e[30]||(e[30]=o('<p>在载具物体顶层添加Rigidbody组件配置其<code>mass</code>=300、<code>drag</code>=0.1、<code>angularDrag</code>=3，参考<a href="https://docs.unity.cn/cn/2020.3/Manual/class-Rigidbody.html" target="_blank" rel="noopener noreferrer">刚体</a></p><p>在载具物体内均匀添加BoxCollider，使其基本覆盖载具，可以留一些空</p><p>与AudioSource，勾选<code>loop</code>，参下）组件</p><p>找到方向盘物体，可以直接挂上SteeringWheel组件并配置，确保方向盘模型的z轴在LOCAL坐标模式下转地正常（否则你得套一个空物体在模型上，作为子物体）：</p><p>{缺图}</p><p>再然后在方向盘下放两个子物体作为手放在方向盘的位置，待会备用：</p><p>{缺图}</p><p>新建两个Particle System粒子系统子物体（或从原版jeep处复制粘贴，推荐），作为载具的<code>smokeParticles</code>和<code>deathParticles</code></p><p>仿照原版jeep，配置这两个粒子系统的Main（原版中改变了<code>duration</code>、<code>looping</code>、<code>startLifetime</code>、<code>startSpeed</code>、<code>startSize</code>、<code>startRotation</code>、<code>startColor</code>、<code>scalingMode</code>、<code>playOnAwake</code>,注意配置项旁边的小三角）、Emission（原版中改变了<code>rateOverTime</code>、<code>bursts</code>）、Renderer模块（原版中改变了<code>material</code>、<code>sortingFudge</code>、<code>reflectionProbes</code>），参见<a href="https://docs.unity.cn/cn/2020.3/Manual/PartSysMainModule.html" target="_blank" rel="noopener noreferrer">粒子系统</a></p><p>然后将其放入载具组件对应位置<code>smokeParticles</code>和<code>deathParticles</code></p><p>新建两个空物体，并分别挂载AudioSource组件（如果你刚才是复制粘贴原版jeep粒子系统的话，那么应该已经带了AudioSource组件，可以免去这步），作为载具的<code>impactAudio</code>和<code>deathSound</code></p><p>配置这两个AudioSource组件（原版中改变了<code>audioClip</code>、<code>playOnAwake</code>、<code>priority</code>、<code>volumeRolloff</code>、<code>maxDistance</code>、立体音3D曲线）参见<a href="https://docs.unity.cn/cn/2020.3/Manual/class-AudioSource.html" target="_blank" rel="noopener noreferrer">AudioSource组件</a></p><p>然后将其放入载具组件对应位置</p><p>新建一个空物体，添加CarWheel组件（如果CarWheel组件的绿色圆圈旋转不正确，你需要先旋转一下这个空物体，使它回到正确位置）：</p><p>将一个车轮模型作为子物体放进去，调整好位置，使其与圆圈重合：</p><p>然后删掉其他的轮子模型物体，复制粘贴做好的这个放到原位置上（你也可以分别弄，但会麻烦得多）。这个不用像刚才一样将其放入载具组件对应位置（因为不需要放）：</p><p>新建一个相机子物体，放在载具内合适位置，禁用其上的Camera组件，添加ThirdPersonCameraLook组件。作为第三人称视角相机，备用</p><p>新建一个空物体并添加Seat、BoxCollider组件（你也可以直接在模型物体上添加组件，但不推荐，除非模型的缩放为0），然后调整BoxCollider大小，将一个座椅模型作为子物体放进去并调整好位置使其重合与BoxCollider重合</p><p>然后删掉其他的座椅模型物体，复制粘贴做好的这个放到原位置上（如果你是直接在模型物体上添加组件，复制粘贴组件即可。你也可以分别弄，但会麻烦得多）。这个它们放入载具组件对应位置<code>seats</code></p><p>配置各个Seat的<code>allowLean</code>、<code>exitOffset</code>、<code>ThirdPersonCamera</code>，放入刚才新建的相机</p><p>对于驾驶位的Seat，一并配置<code>handTargetL</code>、<code>handTargetR</code>与<code>weapons</code>，（使用CarHorn组件，如果你想给驾驶位加个喇叭，像制作武器Mod一样配置CarHorn组件）</p><p>最后配置完ArcadeCar组件的剩余项<code>name</code>、<code>crashDamageSpeedThrehshold</code>、<code>crashDamageMultiplier</code>、<code>aiType</code>、<code>aiUseToDefendPoint</code>、<code>blip</code>、<code>disableOnDeath</code>、<code>acceleration</code>、<code>topSpeed</code>、<code>brakeAccelerationTriggerSpeed</code>、<code>driftByBrake</code>、<code>extraStability</code>、<code>groundDrag</code></p><h2 id="_3-0-测试与导出" tabindex="-1"><a class="header-anchor" href="#_3-0-测试与导出"><span>3.0 测试与导出</span></a></h2>',23)),n("p",null,[e[25]||(e[25]=t("参见",-1)),l(i,{to:"/cn/Components/ActorSkinContentMod.html"},{default:a(()=>[...e[24]||(e[24]=[t("ActorSkinContentMod",-1)])]),_:1})])])}const g=d(c,[["render",h],["__file","vhc.1.html.vue"]]),f=JSON.parse('{"path":"/cn/Tutorials/vhc.1.html","title":"教程 vhc.1 载具","lang":"zh-CN","frontmatter":{"category":["教程"],"description":"教程 vhc.1 载具 前言 在此文档中，我们将为您呈现制作一个载具的大致过程，使用原版载具作为示例 0.0 构思 同样地，像一样 你要做的东西对应你所需要使用的Unity组件： 上述的每一种载具都需要以下流程： 是的，又要出发了！ 1.0 确定所需资源 类似的，一个载具同样包含模型、音效、以及粒子效果 上述三项资源需要您自行上网寻找或按要仿制的游戏武...","head":[["meta",{"property":"og:url","content":"https://ravenfieldcommunity.github.io/docs/cn/Tutorials/vhc.1.html"}],["meta",{"property":"og:site_name","content":"Ravenfield社区文档"}],["meta",{"property":"og:title","content":"教程 vhc.1 载具"}],["meta",{"property":"og:description","content":"教程 vhc.1 载具 前言 在此文档中，我们将为您呈现制作一个载具的大致过程，使用原版载具作为示例 0.0 构思 同样地，像一样 你要做的东西对应你所需要使用的Unity组件： 上述的每一种载具都需要以下流程： 是的，又要出发了！ 1.0 确定所需资源 类似的，一个载具同样包含模型、音效、以及粒子效果 上述三项资源需要您自行上网寻找或按要仿制的游戏武..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-22T12:48:03.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-22T12:48:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"教程 vhc.1 载具\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-22T12:48:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"0.0 构思","slug":"_0-0-构思","link":"#_0-0-构思","children":[]},{"level":2,"title":"1.0 确定所需资源","slug":"_1-0-确定所需资源","link":"#_1-0-确定所需资源","children":[]},{"level":2,"title":"1.1 调整模型","slug":"_1-1-调整模型","link":"#_1-1-调整模型","children":[]},{"level":2,"title":"2.0 导入Unity","slug":"_2-0-导入unity","link":"#_2-0-导入unity","children":[]},{"level":2,"title":"2.1 各个载具组成（简单换皮向）","slug":"_2-1-各个载具组成-简单换皮向","link":"#_2-1-各个载具组成-简单换皮向","children":[]},{"level":2,"title":"2.2 各个载具组成（复杂向）","slug":"_2-2-各个载具组成-复杂向","link":"#_2-2-各个载具组成-复杂向","children":[{"level":3,"title":"2.1.1 Jeep与武装Jeep","slug":"_2-1-1-jeep与武装jeep","link":"#_2-1-1-jeep与武装jeep","children":[]}]},{"level":2,"title":"3.0 测试与导出","slug":"_3-0-测试与导出","link":"#_3-0-测试与导出","children":[]}],"git":{"createdTime":1691332050000,"updatedTime":1753188483000,"contributors":[{"name":"KeilAwk","email":"82655578+KeilAwk@users.noreply.github.com","commits":10},{"name":"Leafx-code","email":"82655578+Leafx-code@users.noreply.github.com","commits":6}]},"filePathRelative":"cn/Tutorials/vhc.1.md","localizedDate":"2023年8月6日","autoDesc":true}');export{g as comp,f as data};
