import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,a as d,d as n,e as r,w as i,r as m,o as p}from"./app-DkmI_Kqk.js";const s={};function h(u,t){const o=m("RouteLink");return p(),a("div",null,[t[11]||(t[11]=e("h1",{id:"animationdrivenvehicle",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#animationdrivenvehicle"},[e("span",null,"AnimationDrivenVehicle")])],-1)),t[12]||(t[12]=e("h2",{id:"描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#描述"},[e("span",null,"描述")])],-1)),e("p",null,[t[1]||(t[1]=n("从",-1)),r(o,{to:"/cn/Components/Vehicle.html"},{default:i(()=>[...t[0]||(t[0]=[n("Vehicle",-1)])]),_:1}),t[2]||(t[2]=n("类派生",-1))]),t[13]||(t[13]=e("p",null,"自定义动画的载具",-1)),t[14]||(t[14]=e("h2",{id:"用法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#用法"},[e("span",null,"用法")])],-1)),t[15]||(t[15]=e("p",null,"需要一个CharacterController组件，否则载具无法操作",-1)),e("p",null,[t[4]||(t[4]=n("参考",-1)),r(o,{to:"/cn/Components/Vehicle.html"},{default:i(()=>[...t[3]||(t[3]=[n("Vehicle",-1)])]),_:1}),t[5]||(t[5]=n("/",-1))]),t[16]||(t[16]=e("h2",{id:"注释",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#注释"},[e("span",null,"注释")])],-1)),e("p",null,[t[8]||(t[8]=n("建议将",-1)),r(o,{to:"/cn/Components/InheritDeltaRotation.html"},{default:i(()=>[...t[6]||(t[6]=[n("InheritDeltaRotation",-1)])]),_:1}),t[9]||(t[9]=n("、",-1)),r(o,{to:"/cn/Components/LookAtCamera.html"},{default:i(()=>[...t[7]||(t[7]=[n("LookAtCamera",-1)])]),_:1}),t[10]||(t[10]=n("与本组件配合使用",-1))]),t[17]||(t[17]=d('<p>注意Animator组件<code>applyRootMotion</code>选项，按需求启用，作用参考<a href="https://docs.unity.cn/cn/2020.3/Manual/class-Animator.html" target="_blank" rel="noopener noreferrer">Unity官方文档</a></p><p>注意Animator组件于AnimatorController的运用</p><p>当CharacterController的碰撞箱与地面碰撞时，载具才会移动，因此请按情况调整CharacterController的碰撞箱体积</p><p>对应动画机的Parameters：</p><table><thead><tr><th>Parameters名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>input forward</td><td>float</td><td>前后操作的axis虚拟轴（Vertical）</td></tr><tr><td>input right</td><td>float</td><td>左右操作的axis虚拟轴（Horizontal）</td></tr><tr><td>moving</td><td>bool</td><td>当载具在移动时为true（仅XY轴）</td></tr><tr><td>sprint</td><td>bool</td><td>玩家按下“冲刺”键时为true</td></tr><tr><td>jump</td><td>bool</td><td>玩家按下“跳”键时为true</td></tr><tr><td>crouch</td><td>bool</td><td>玩家按下“蹲起”键时为true</td></tr><tr><td>lean</td><td>float</td><td>玩家按下“侧头”键时为true</td></tr><tr><td>touching ground</td><td>bool</td><td>载具碰撞体接触地面时为true</td></tr></tbody></table><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h2><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>groundCheckers</td><td>GroundChecker[]</td><td>地面检测（疑似废弃）</td></tr><tr><td>inputSmoothness</td><td>int</td><td>虚拟轴输入平滑度（值越大，载具实际操作灵敏度越低）</td></tr><tr><td>checker</td><td>Transform</td><td></td></tr><tr><td>rayLength</td><td>float</td><td>光线长度（应该是作用于<code>groundChecker</code>，但疑似废弃）</td></tr></tbody></table>',7))])}const g=l(s,[["render",h],["__file","AnimationDrivenVehicle.html.vue"]]),C=JSON.parse('{"path":"/cn/Components/AnimationDrivenVehicle.html","title":"AnimationDrivenVehicle","lang":"zh-CN","frontmatter":{"category":["组件","载具"],"description":"AnimationDrivenVehicle 描述 从类派生 自定义动画的载具 用法 需要一个CharacterController组件，否则载具无法操作 参考/ 注释 建议将、与本组件配合使用 注意Animator组件applyRootMotion选项，按需求启用，作用参考Unity官方文档 注意Animator组件于AnimatorControll...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://ravenfieldcommunity.github.io/docs/en/Components/AnimationDrivenVehicle.html"}],["meta",{"property":"og:url","content":"https://ravenfieldcommunity.github.io/docs/cn/Components/AnimationDrivenVehicle.html"}],["meta",{"property":"og:site_name","content":"Ravenfield社区文档"}],["meta",{"property":"og:title","content":"AnimationDrivenVehicle"}],["meta",{"property":"og:description","content":"AnimationDrivenVehicle 描述 从类派生 自定义动画的载具 用法 需要一个CharacterController组件，否则载具无法操作 参考/ 注释 建议将、与本组件配合使用 注意Animator组件applyRootMotion选项，按需求启用，作用参考Unity官方文档 注意Animator组件于AnimatorControll..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-08-11T15:24:39.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-11T15:24:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AnimationDrivenVehicle\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-11T15:24:39.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[]}],"git":{"createdTime":1676644670000,"updatedTime":1723389879000,"contributors":[{"name":"Leafx-code","email":"82655578+Leafx-code@users.noreply.github.com","commits":9},{"name":"KeilAwk","email":"82655578+KeilAwk@users.noreply.github.com","commits":1}]},"filePathRelative":"cn/Components/AnimationDrivenVehicle.md","localizedDate":"2023年2月17日","autoDesc":true}');export{g as comp,C as data};
