import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as d,b as l,d as n,e as r,w as e,r as a,o as s}from"./app-DELzqfzb.js";const m={};function p(f,t){const u=a("RouteLink");return s(),i("div",null,[t[62]||(t[62]=d('<h1 id="vehicle" tabindex="-1"><a class="header-anchor" href="#vehicle"><span>Vehicle</span></a></h1><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p>载具的基础类，是建构一个载具的基础</p><h2 id="用法" tabindex="-1"><a class="header-anchor" href="#用法"><span>用法</span></a></h2><p>套用在载具物体的最顶层层级，附属物体下挂在这个物体里面</p><p>如果一并添加了Audio Source组件（与Vehicle组件并列），该组件将作为载具的运行音效（记得勾选Audio Source的<code>Loop</code>）</p>',6)),l("p",null,[t[1]||(t[1]=n("参考")),r(u,{to:"/cn/Tutorials/"},{default:e(()=>t[0]||(t[0]=[n("RFCreator Project")])),_:1,__:[0]})]),t[63]||(t[63]=d('<h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h2><p>可用动画机的Parameters：</p><table><thead><tr><th>Parameters名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>velocity x</td><td>float</td><td>载具x轴方向的速度</td></tr><tr><td>velocity y</td><td>float</td><td>载具y轴方向的速度</td></tr><tr><td>velocity z</td><td>float</td><td>载具z轴方向的速度</td></tr><tr><td>input x</td><td>float</td><td>x轴方向操作的axis虚拟轴</td></tr><tr><td>input y</td><td>float</td><td>y轴方向操作的axis虚拟轴</td></tr><tr><td>input z</td><td>float</td><td>z轴方向操作的axis虚拟轴</td></tr><tr><td>input w</td><td>float</td><td></td></tr></tbody></table><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h2>',4)),l("table",null,[t[61]||(t[61]=l("thead",null,[l("tr",null,[l("th",null,"名称"),l("th",null,"类型"),l("th",null,"描述")])],-1)),l("tbody",null,[t[7]||(t[7]=l("tr",null,[l("td",null,"aiType"),l("td",null,"enum"),l("td",null,[n("ai认定的载具用途类型("),l("code",null,"Capture"),n("=占领据点, "),l("code",null,"Roam"),n("=移动, "),l("code",null,"Transport"),n("=运输)")])],-1)),t[8]||(t[8]=l("tr",null,[l("td",null,"armorRating"),l("td",null,"enum"),l("td",null,[n("装甲强度（"),l("code",null,"SmallArms"),n("=轻武器, "),l("code",null,"HeavyArms"),n("=重武器, "),l("code",null,"AntiTank"),n("=穿甲）")])],-1)),t[9]||(t[9]=l("tr",null,[l("td",null,"aiUseStrategy"),l("td",null,"enum"),l("td",null,[n("ai认定的载具使用方案（"),l("code",null,"Default"),n(", "),l("code",null,"OnlyFromFrontlineSpawn"),n(", "),l("code",null,"FromAnySpawn"),n("）")])],-1)),t[10]||(t[10]=l("tr",null,[l("td",null,"name"),l("td",null,"string"),l("td",null,"载具名称")],-1)),l("tr",null,[t[5]||(t[5]=l("td",null,"seats",-1)),l("td",null,[t[3]||(t[3]=n("List<")),r(u,{to:"/cn/Components/Seat.html"},{default:e(()=>t[2]||(t[2]=[n("Seat")])),_:1,__:[2]}),t[4]||(t[4]=n(">"))]),t[6]||(t[6]=l("td",null,"座位(第一个座位将设置为驾驶位)",-1))]),t[11]||(t[11]=l("tr",null,[l("td",null,"targetType"),l("td",null,"enum.Actor.TargetType"),l("td",null,[n("目标类型（载具自身的类型。"),l("code",null,"Infantry"),n("=单步兵运输, "),l("code",null,"InfantryGroup"),n("=步兵群运输, "),l("code",null,"Unarmored"),n("=非装甲, "),l("code",null,"Armored"),n("=装甲, "),l("code",null,"Air"),n("=空中（即直升机）, "),l("code",null,"AirFastMover"),n("=高速的空中目标（即飞机））")])],-1)),t[12]||(t[12]=l("tr",null,[l("td",null,"armorDamagedBy"),l("td",null,"enum.ArmorRating"),l("td",null,"载具可被哪种武器攻击（SmallArms=轻武器, HeavyArms=重武器, AntiTank=穿甲）")],-1)),t[13]||(t[13]=l("tr",null,[l("td",null,"smallArmsMultiplier"),l("td",null,"float"),l("td",null,"轻武器伤害倍率")],-1)),t[14]||(t[14]=l("tr",null,[l("td",null,"heavyArmsMultiplier"),l("td",null,"float"),l("td",null,"重武器伤害倍率")],-1)),t[15]||(t[15]=l("tr",null,[l("td",null,"canBeRepairedAfterDeath"),l("td",null,"bool"),l("td",null,"死亡后可修复")],-1)),t[16]||(t[16]=l("tr",null,[l("td",null,"maxHealth"),l("td",null,"float"),l("td",null,"最大生命值")],-1)),t[17]||(t[17]=l("tr",null,[l("td",null,"crashDamageSpeedThrehshold"),l("td",null,"float"),l("td",null,"撞击造成伤害的速度的阈值")],-1)),t[18]||(t[18]=l("tr",null,[l("td",null,"crashDamageMultiplier"),l("td",null,"float"),l("td",null,"撞击伤害")],-1)),t[19]||(t[19]=l("tr",null,[l("td",null,"spotChanceMultiplier"),l("td",null,"float"),l("td",null,"醒目程度倍率 (该值越高，则敌军AI越容易透过地图雾气发现你)")],-1)),t[20]||(t[20]=l("tr",null,[l("td",null,"burnTime"),l("td",null,"float"),l("td",null,"燃烧时间")],-1)),t[21]||(t[21]=l("tr",null,[l("td",null,"crashSkipsBurn"),l("td",null,"bool"),l("td",null,"撞死跳过燃烧")],-1)),t[22]||(t[22]=l("tr",null,[l("td",null,"directJavelinPath"),l("td",null,"bool"),l("td",null,"是否引导导弹锁定（不打勾就默认是在坐标原点吧好像）")],-1)),t[23]||(t[23]=l("tr",null,[l("td",null,"canCapturePoints"),l("td",null,"bool"),l("td",null,"载具是否可用来占领点位")],-1)),t[24]||(t[24]=l("tr",null,[l("td",null,"canFireAtOwnVehicle"),l("td",null,"bool"),l("td",null,"载具可以伤害自身")],-1)),t[25]||(t[25]=l("tr",null,[l("td",null,"targetLockPoint"),l("td",null,"Transform"),l("td",null,"导弹锁定点（须先开启引导导弹锁定）")],-1)),t[26]||(t[26]=l("tr",null,[l("td",null,"aiUseToDefendPoint"),l("td",null,"bool"),l("td",null,"ai是否使用载具防御据点")],-1)),t[27]||(t[27]=l("tr",null,[l("td",null,"minCrewCount"),l("td",null,"int"),l("td",null,"最低载员（适用于运输载具）")],-1)),t[28]||(t[28]=l("tr",null,[l("td",null,"roamCompleteDistance"),l("td",null,"float"),l("td",null,"巡游结束距离(如果驾驶该载具的小队队长当前位置和最后前往的位置小于该值，则会巡游至新目标位置)")],-1)),t[29]||(t[29]=l("tr",null,[l("td",null,"smokeParticles"),l("td",null,"ParticleSystem"),l("td",null,"冒烟粒子")],-1)),t[30]||(t[30]=l("tr",null,[l("td",null,"fireParticles"),l("td",null,"ParticleSystem"),l("td",null,"着火粒子")],-1)),t[31]||(t[31]=l("tr",null,[l("td",null,"fireAlarmSound"),l("td",null,"AudioSource"),l("td",null,"火焰警报")],-1)),t[32]||(t[32]=l("tr",null,[l("td",null,"deathParticles"),l("td",null,"ParticleSystem"),l("td",null,"死亡粒子")],-1)),t[33]||(t[33]=l("tr",null,[l("td",null,"deathSound"),l("td",null,"AudioSource"),l("td",null,"死亡音效")],-1)),t[34]||(t[34]=l("tr",null,[l("td",null,"impactAudio"),l("td",null,"AudioSource"),l("td",null,"撞击音效")],-1)),t[35]||(t[35]=l("tr",null,[l("td",null,"heavyDamageAudio"),l("td",null,"AudioSource"),l("td",null,"冒烟时的音效")],-1)),t[36]||(t[36]=l("tr",null,[l("td",null,"blockSensor"),l("td",null,"Transform"),l("td",null,"阻挡检测物体(一个简单的方块，并关闭其Mesh Render即可。如果有友军在检测器的范围内，车辆的驾驶员会尝试刹车，直到检测器内没有任何友军后才会继续行驶，但对直升机和飞机无效。疑似废弃，原版载具没有配置此项)")],-1)),t[37]||(t[37]=l("tr",null,[l("td",null,"blip"),l("td",null,"Texture"),l("td",null,"小地图上的载具图标")],-1)),t[38]||(t[38]=l("tr",null,[l("td",null,"blipScale"),l("td",null,"float"),l("td",null,"小地图上的载具图标的显示大小倍率")],-1)),t[39]||(t[39]=l("tr",null,[l("td",null,"avoidanceSize"),l("td",null,"Vector2"),l("td",null,"载具生成避让大小(AI在巡路系统中认为的体积大小)")],-1)),t[40]||(t[40]=l("tr",null,[l("td",null,"pathingRadius"),l("td",null,"float"),l("td",null,"AI进入载具的范围(该值越大，则AI就能从更远的地方直接进入该载具)")],-1)),t[41]||(t[41]=l("tr",null,[l("td",null,"ramSize"),l("td",null,"Vector3"),l("td",null,"撞击区域大小调整")],-1)),t[42]||(t[42]=l("tr",null,[l("td",null,"ramOffset"),l("td",null,"Vector3"),l("td",null,"撞击区域位置调整")],-1)),t[43]||(t[43]=l("tr",null,[l("td",null,"disableOnDeath"),l("td",null,"GameObject[]"),l("td",null,"死亡时隐藏的物体")],-1)),t[44]||(t[44]=l("tr",null,[l("td",null,"activateOnDeath"),l("td",null,"GameObject[]"),l("td",null,"死亡时显示（启用）的物体")],-1)),t[45]||(t[45]=l("tr",null,[l("td",null,"teamColorMaterials"),l("td",null,"MaterialTarget[]"),l("td",null,"阵营颜色材质（需事先在Blender分配一个材质槽用于显示材质颜色）")],-1)),t[46]||(t[46]=l("tr",null,[l("td",null,"hasCountermeasures"),l("td",null,"bool"),l("td",null,"有无干扰弹")],-1)),t[47]||(t[47]=l("tr",null,[l("td",null,"countermeasuresActiveTime"),l("td",null,"float"),l("td",null,"干扰效果持续时间")],-1)),t[48]||(t[48]=l("tr",null,[l("td",null,"countermeasuresCooldown"),l("td",null,"float"),l("td",null,"干扰弹冷却时间")],-1)),t[49]||(t[49]=l("tr",null,[l("td",null,"countermeasureParticles"),l("td",null,"ParticleSystem"),l("td",null,"干扰弹发射时的粒子")],-1)),t[50]||(t[50]=l("tr",null,[l("td",null,"countermeasureSpawnPrefab"),l("td",null,"GameObject"),l("td",null,"发射干扰弹时同时生成的Prefab")],-1)),t[51]||(t[51]=l("tr",null,[l("td",null,"countermeasureAudio"),l("td",null,"AudioSource"),l("td",null,"干扰弹音效")],-1)),t[52]||(t[52]=l("tr",null,[l("td",null,"controlAudio"),l("td",null,"bool"),l("td",null,"控制音频（引擎音效）")],-1)),t[53]||(t[53]=l("tr",null,[l("td",null,"powerGainSpeed"),l("td",null,"float"),l("td",null,"音频响度提升速度（不太确定是不是）")],-1)),t[54]||(t[54]=l("tr",null,[l("td",null,"pitchGainSpeed"),l("td",null,"float"),l("td",null,"音频频率提升速度")],-1)),t[55]||(t[55]=l("tr",null,[l("td",null,"throttleGainSpeed"),l("td",null,"float"),l("td",null,"载具油门提升速度")],-1)),t[56]||(t[56]=l("tr",null,[l("td",null,"throttleAudioSource"),l("td",null,"AudioSource"),l("td",null,"随着油门的变化调整播放的音量和音高")],-1)),t[57]||(t[57]=l("tr",null,[l("td",null,"extraAudioSource"),l("td",null,"AudioSource"),l("td",null,"换挡音效和启动音效的载体(shiftForwardClip、shiftReverseClip、ignitionClip必须要拥有此载体才可播放对应的音效)")],-1)),t[58]||(t[58]=l("tr",null,[l("td",null,"shiftForwardClip"),l("td",null,"AudioClip"),l("td",null,"载具前进时会播放此换前进挡音效")],-1)),t[59]||(t[59]=l("tr",null,[l("td",null,"shiftReverseClip"),l("td",null,"AudioClip"),l("td",null,"载具倒车时会播放此换倒车挡音效")],-1)),t[60]||(t[60]=l("tr",null,[l("td",null,"ignitionClip"),l("td",null,"AudioClip"),l("td",null,"载具启动的音效")],-1))])])])}const S=o(m,[["render",p],["__file","Vehicle.html.vue"]]),g=JSON.parse('{"path":"/cn/Components/Vehicle.html","title":"Vehicle","lang":"zh-CN","frontmatter":{"category":["组件","载具"],"description":"Vehicle 描述 载具的基础类，是建构一个载具的基础 用法 套用在载具物体的最顶层层级，附属物体下挂在这个物体里面 如果一并添加了Audio Source组件（与Vehicle组件并列），该组件将作为载具的运行音效（记得勾选Audio Source的Loop） 参考 注释 可用动画机的Parameters： 变量","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://ravenfieldcommunity.github.io/docs/en/Components/Vehicle.html"}],["meta",{"property":"og:url","content":"https://ravenfieldcommunity.github.io/docs/cn/Components/Vehicle.html"}],["meta",{"property":"og:site_name","content":"Ravenfield社区文档"}],["meta",{"property":"og:title","content":"Vehicle"}],["meta",{"property":"og:description","content":"Vehicle 描述 载具的基础类，是建构一个载具的基础 用法 套用在载具物体的最顶层层级，附属物体下挂在这个物体里面 如果一并添加了Audio Source组件（与Vehicle组件并列），该组件将作为载具的运行音效（记得勾选Audio Source的Loop） 参考 注释 可用动画机的Parameters： 变量"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-09-16T23:33:37.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-16T23:33:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vehicle\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-16T23:33:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[]}],"git":{"createdTime":1676622945000,"updatedTime":1726529617000,"contributors":[{"name":"Leafx-code","email":"82655578+Leafx-code@users.noreply.github.com","commits":9},{"name":"KeilAwk","email":"82655578+KeilAwk@users.noreply.github.com","commits":2},{"name":"QMeiMei","email":"119944603+RedQieMei@users.noreply.github.com","commits":1}]},"filePathRelative":"cn/Components/Vehicle.md","localizedDate":"2023年2月17日","autoDesc":true}');export{S as comp,g as data};
