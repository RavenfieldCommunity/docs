import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,a as h,b as i,d as a,e as l,w as t,r as p,o as r}from"./app-w8caumNg.js";const d={};function A(B,s){const n=p("RouteLink");return r(),k("div",null,[s[10]||(s[10]=h('<h1 id="rvs-2-mutators" tabindex="-1"><a class="header-anchor" href="#rvs-2-mutators"><span>rvs.2 Mutators</span></a></h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>此文档将一步步引导你开发一个简单的Mutators，带您理解Mutators的基本构造</p><h2 id="_0-0-想" tabindex="-1"><a class="header-anchor" href="#_0-0-想"><span>0.0 想！</span></a></h2><p>现在我们先想一下我们的Mutators有什么功能</p><p>例如我们本次的示例Mutators简单血量回复，他应该有：</p><ul><li>基本的血量回复，每次修复35%（可修改）</li><li>有冷却时间（可修改，最低为60s）</li><li>防止血量回复后健康超过最大值</li><li>（次要）加入UI，显示修复状态与健康</li></ul><p>然后我们再简单想一下脚本的运行逻辑与可以供玩家在游戏中调整的数值，方便实际敲代码(可以跳过)</p><p>在本实例中，公开的可以供玩家在游戏中调整的数值：血量回复比例、冷却时间、键位</p><p>现在我们可以正式开始了!</p><h2 id="_1-0-unity内简单配置" tabindex="-1"><a class="header-anchor" href="#_1-0-unity内简单配置"><span>1.0 Unity内简单配置</span></a></h2><p>在打代码之前，我们先在Unity配置一下Mutators的预制件的Mod导出设置</p>',12)),i("p",null,[s[1]||(s[1]=a("场景内新建一个空物体，添加")),l(n,{to:"/cn/Components/ScriptedBehaviour.html"},{default:t(()=>s[0]||(s[0]=[a("ScriptedBehaviour")])),_:1,__:[0]}),s[2]||(s[2]=a("组件"))]),s[11]||(s[11]=i("p",null,"新建一个右键新建一个Ravenscrpit文件，把这个文件拖入组件内的source，Behaviour处填写TXT的文件名：",-1)),s[12]||(s[12]=i("p",null,"{缺图}",-1)),i("p",null,[s[4]||(s[4]=a("预制件化这个物体（游戏中这个物体下的所有东西都会被实例化，包括UI之类的物体），在")),l(n,{to:"/cn/Components/MutatorCotentMod.html"},{default:t(()=>s[3]||(s[3]=[a("MutatorCotentMod")])),_:1,__:[3]}),s[5]||(s[5]=a("配置这个Mutator，此处在config这里配置了float、range、string各一个："))]),s[13]||(s[13]=i("p",null,"{缺图}",-1)),s[14]||(s[14]=i("h2",{id:"_1-1-完成主要功能",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_1-1-完成主要功能"},[i("span",null,"1.1 完成主要功能")])],-1)),i("p",null,[s[7]||(s[7]=a("已迁移至")),l(n,{to:"/cn/Tutorials/rvs.1.html"},{default:t(()=>s[6]||(s[6]=[a("rsv.1")])),_:1,__:[6]})]),s[15]||(s[15]=h(`<h2 id="_1-2-添加次要功能" tabindex="-1"><a class="header-anchor" href="#_1-2-添加次要功能"><span>1.2 添加次要功能</span></a></h2><p>现在添加我们的次要功能UI操作</p><p>各类<a href="https://docs.unity.cn/cn/current/Manual/UICanvas.html" target="_blank" rel="noopener noreferrer">UI组件的应用</a>不再赘述</p><p>首先在场景内的Mutator添加一个Canvas，在Canvas内添加Scroll View，在Scroll View内添加Button和Text：</p><p>{缺图}</p><p>然后自行修改UI物体的大小位置以及文字，注意禁用Canvas物体放置一开游戏就显示Canvas：</p><p>{缺图}</p><p>将canvas添加进我们前面ScriptedBehaviour组件内的target，方便调用：</p><p>{缺图}</p><p>在MutatorCotentMod内添加一个Bool选项卡，让我们可以自定义UI的开启：</p><p>{缺图}</p><p>现在回到代码编辑器</p><p>按照文档提供的api编写脚本：</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" data-title="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">behaviour</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;QuickTreat&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cooldown</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ratio</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> keybind</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> mutator</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> enableUI</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  --是否启用UI，默认为false</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> button</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  --canvas内的按键</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">local</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> text</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  --canvas内的Text物体</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> QuickTreat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    coroutine.yield</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WaitForSeconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.mutator = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.script.mutator</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cooldown = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.mutator.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetConfigurationFloat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;cooldown&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cooldown &lt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cooldown = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.ratio = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.mutator.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetConfigurationRange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ratio&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.keybind = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.mutator.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetConfigurationString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;keybind&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.keybind == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.keybind = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;P&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.mutator.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetConfigurationBool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;enableUI&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) != </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.enableUI = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.mutator.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetConfigurationBool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;enableUI&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	end</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.button = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.targets.canvas.gameObject.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetComponentInChildren</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--获取Button组件</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.button.onClick.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">AddListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;onClick&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--添加一个监听事件，self是指在触发事件时要使用的事件函数所在脚本，“onClick”是指在触发事件时要调用的方法名，也就是下面的QuickTreat:onClick()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.text = </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.targets.canvas.gameObject.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetComponentInChildren</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--获取Text组件（可能会获取到button的Text组件，届时请自行修改代码lol）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.timer = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.time + </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cooldown</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> QuickTreat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetKeyDown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.keybind) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.enableUI == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  --如果启用UI,就设置Canvas为活动</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.targets.canvas.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SetActive</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(not </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.targets.canvas.activeSelf)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">			if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.targets.canvas.activeSelf == </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> then</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  --如果Canvas处于活动状态，就将鼠标从游戏操作解锁，否则锁定鼠标</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			    Screen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UnlockCursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">			else</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			    Screen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LockCursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">			end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        else</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.time &gt;= </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.timer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                Player</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.actor.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ResupplyHealth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Player</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.actor.maxHealth * </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.ratio)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">			    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.timer = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.time + </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cooldown</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">				Overlay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ShowMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[QuickTreat]Sucess&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            else</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">                Overlay</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ShowMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;[QuickTreat]Failure,Need delay&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">			end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	end</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> QuickTreat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OnClick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--点击Button时的事件函数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.time &gt;= </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.timer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        Player</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.actor.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ResupplyHealth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Player</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.actor.maxHealth * </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.ratio)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.timer = </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.time + </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.cooldown</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">		self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.text.text = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Sucess&quot;  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--如果ResupplyHealth了，就将text物体的text属性改为目标文本</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	else</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">	    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.text.text = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Failure,Need delay&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">..</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">tostring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.timer - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.time)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">--如果没过冷却了，就将text物体的text属性改为目标文本</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试，没bug，我们就可以进行最后一步了</p><h2 id="_3-0-测试与导出" tabindex="-1"><a class="header-anchor" href="#_3-0-测试与导出"><span>3.0 测试与导出</span></a></h2>`,16)),i("p",null,[s[9]||(s[9]=a("参考")),l(n,{to:"/cn/Components/MutatorCotentMod.html"},{default:t(()=>s[8]||(s[8]=[a("MutatorCotentMod")])),_:1,__:[8]})]),s[16]||(s[16]=i("h2",{id:"_4-0-拓展参考",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#_4-0-拓展参考"},[i("span",null,"4.0 拓展参考")])],-1)),s[17]||(s[17]=i("p",null,"这些是一些modder在github上公开的mutators参考，你可以自行研究：",-1)),s[18]||(s[18]=i("ul",null,[i("li",null,[i("p",null,[i("a",{href:"https://github.com/veroiuxl/RavenfieldMutatorMods",target:"_blank",rel:"noopener noreferrer"},"veroiuxl/RavenfieldMutatorMods")])]),i("li",null,[i("p",null,[i("a",{href:"https://github.com/RadioactiveJelly?tab=repositories",target:"_blank",rel:"noopener noreferrer"},"RadioactiveJelly的Github主页")])])],-1))])}const o=e(d,[["render",A],["__file","rvs.2.html.vue"]]),u=JSON.parse('{"path":"/cn/Tutorials/rvs.2.html","title":"rvs.2 Mutators","lang":"zh-CN","frontmatter":{"category":["教程"],"description":"rvs.2 Mutators 前言 此文档将一步步引导你开发一个简单的Mutators，带您理解Mutators的基本构造 0.0 想！ 现在我们先想一下我们的Mutators有什么功能 例如我们本次的示例Mutators简单血量回复，他应该有： 基本的血量回复，每次修复35%（可修改） 有冷却时间（可修改，最低为60s） 防止血量回复后健康超过最大值...","head":[["meta",{"property":"og:url","content":"https://ravenfieldcommunity.github.io/docs/cn/Tutorials/rvs.2.html"}],["meta",{"property":"og:site_name","content":"Ravenfield社区文档"}],["meta",{"property":"og:title","content":"rvs.2 Mutators"}],["meta",{"property":"og:description","content":"rvs.2 Mutators 前言 此文档将一步步引导你开发一个简单的Mutators，带您理解Mutators的基本构造 0.0 想！ 现在我们先想一下我们的Mutators有什么功能 例如我们本次的示例Mutators简单血量回复，他应该有： 基本的血量回复，每次修复35%（可修改） 有冷却时间（可修改，最低为60s） 防止血量回复后健康超过最大值..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-11T14:02:34.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-11T14:02:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rvs.2 Mutators\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-11T14:02:34.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"0.0 想！","slug":"_0-0-想","link":"#_0-0-想","children":[]},{"level":2,"title":"1.0 Unity内简单配置","slug":"_1-0-unity内简单配置","link":"#_1-0-unity内简单配置","children":[]},{"level":2,"title":"1.1 完成主要功能","slug":"_1-1-完成主要功能","link":"#_1-1-完成主要功能","children":[]},{"level":2,"title":"1.2 添加次要功能","slug":"_1-2-添加次要功能","link":"#_1-2-添加次要功能","children":[]},{"level":2,"title":"3.0 测试与导出","slug":"_3-0-测试与导出","link":"#_3-0-测试与导出","children":[]},{"level":2,"title":"4.0 拓展参考","slug":"_4-0-拓展参考","link":"#_4-0-拓展参考","children":[]}],"git":{"createdTime":1677332562000,"updatedTime":1699711354000,"contributors":[{"name":"Leafx-code","email":"82655578+Leafx-code@users.noreply.github.com","commits":5}]},"filePathRelative":"cn/Tutorials/rvs.2.md","localizedDate":"2023年2月25日","autoDesc":true}');export{o as comp,u as data};
